/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;
import Model.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Panzi
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    private Application application;
    DefaultTableModel viewTableModel;
    Observation selectedObservation;

    public ViewJPanel(Application application) {
        initComponents();
        this.application = application;
        this.viewTableModel = (DefaultTableModel) observationTable.getModel();

        //display
        displayObservations();
        
    }

    public void displayObservations(){
        VitalSignHistory history = this.application.getHistory();

        if(history.getVitalSignHistory().size() > 0){
             viewTableModel.setRowCount(0);
             for(Observation o : history.getVitalSignHistory()){
                 
                 Object row[] = new Object[3];
                 row[0] = o;
                 row[1] = o.getTemperature();
                 row[2] = o.getBloodPressure();
                 this.viewTableModel.addRow(row);
             }
        } else{
            System.out.print("Empty list");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fieldObservationID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldTemperature = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fieldBloodPressure = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        observationTable = new javax.swing.JTable();
        btnViewObservation = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));
        setPreferredSize(new java.awt.Dimension(1197, 843));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("VIEW AND UPDATE A VITAL SIGN");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, -1, -1));

        fieldObservationID.setEnabled(false);
        add(fieldObservationID, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 190, -1));

        jLabel2.setText("ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        jLabel3.setText("Temperature");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, -1, -1));
        add(fieldTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 190, -1));

        jLabel4.setText("Blood Pressure");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));
        add(fieldBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, 190, -1));

        btnUpdate.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        btnUpdate.setText("UPDATE OBSERVATION");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 500, -1, -1));

        observationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Temperature", "BP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(observationTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 150, -1, -1));

        btnViewObservation.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        btnViewObservation.setText("VIEW DETAILS");
        btnViewObservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewObservationActionPerformed(evt);
            }
        });
        add(btnViewObservation, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 640, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewObservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewObservationActionPerformed
        // TODO add your handling code here:
        //Get the row int the table that was clicked
        int selectedRow = observationTable.getSelectedRow();
        if(selectedRow >= 0){
            this.selectedObservation = (Observation)observationTable.getValueAt(selectedRow, 0);//this is why we change integer to object in the table
            fieldObservationID.setText(String.valueOf(this.selectedObservation.getObservationId()));
            fieldBloodPressure.setText(String.valueOf(this.selectedObservation.getBloodPressure()));
            fieldTemperature.setText(String.valueOf(this.selectedObservation.getTemperature()));
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
    }//GEN-LAST:event_btnViewObservationActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(!fieldObservationID.getText().isEmpty()){
            Observation o = this.application.getHistory().findObservation(Integer.valueOf(fieldObservationID.getText()));
            o.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
            o.setTemperature(Double.valueOf(fieldTemperature.getText()));
//            this.selectedObservation.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
//            this.selectedObservation.setTemperature(Double.valueOf(fieldTemperature.getText()));
         }else{
            JOptionPane.showMessageDialog(null, "You have not made any selection");
         }
         displayObservations();
         
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewObservation;
    private javax.swing.JTextField fieldBloodPressure;
    private javax.swing.JTextField fieldObservationID;
    private javax.swing.JTextField fieldTemperature;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable observationTable;
    // End of variables declaration//GEN-END:variables
}
